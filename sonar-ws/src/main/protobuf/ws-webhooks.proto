// SonarQube, open source software quality management tool.
// Copyright (C) 2008-2016 SonarSource
// mailto:contact AT sonarsource DOT com
//
// SonarQube is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
//
// SonarQube is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

syntax = "proto2";

package sonarqube.ws.webhooks;

import "ws-commons.proto";

option java_package = "org.sonarqube.ws";
option java_outer_classname = "Webhooks";
option optimize_for = SPEED;

message LatestDelivery {
  optional string id = 1;
  optional string at = 2;
  optional bool success = 3;
  optional int32 httpStatus = 4;
  optional int32 durationMs = 5;
}

message ListResponseElement {
  optional string key = 1;
  optional string name = 2;
  optional string url = 3;
  optional LatestDelivery latestDelivery = 4;
  // deprecated
  // optional string secret = 5;
  optional bool hasSecret = 6;
}

// GET api/webhooks/list
message ListResponse {
  repeated ListResponseElement webhooks = 1;
}

// POST api/webhooks/create
message CreateWsResponse {
  optional Webhook webhook = 1;

  message Webhook {
    optional string key = 1;
    optional string name = 2;
    optional string url = 3;
    // deprecated
    // optional string secret = 4;
    required bool hasSecret = 5;
  }
}

// WS api/webhooks/deliveries
message DeliveriesWsResponse {
  optional sonarqube.ws.commons.Paging paging = 1;

  repeated Delivery deliveries = 2;
}

// WS api/webhooks/delivery
message DeliveryWsResponse {
  optional Delivery delivery = 1;
}

message Delivery {
  optional string id = 1;
  optional string componentKey = 2;
  optional string ceTaskId = 3 [deprecated=true];
  optional string name = 4;
  optional string url = 5;
  optional string at = 6;
  optional bool success = 7;
  optional int32 httpStatus = 8;
  optional int32 durationMs = 9;
  optional string payload = 10;
  optional string errorStacktrace = 11;
}
