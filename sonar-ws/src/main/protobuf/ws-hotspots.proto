// SonarQube, open source software quality management tool.
// Copyright (C) 2008-2016 SonarSource
// mailto:contact AT sonarsource DOT com
//
// SonarQube is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
//
// SonarQube is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

syntax = "proto2";

package sonarqube.ws.hotspots;

import "ws-commons.proto";

option java_package = "org.sonarqube.ws";
option java_outer_classname = "Hotspots";
option optimize_for = SPEED;

// Response of GET api/hotspots/search
message SearchWsResponse {
  optional sonarqube.ws.commons.Paging paging = 1;
  repeated Hotspot hotspots = 2;
  repeated Component components = 3;

  message Hotspot {
    optional string key = 1;
    optional string component = 2;
    optional string project = 3;
    optional string securityCategory = 4;
    optional string vulnerabilityProbability = 5;
    optional string status = 6;
    optional string resolution = 7;
    optional int32 line = 8;
    optional string message = 9;
    optional string assignee = 10;
    optional string author = 11;
    optional string creationDate = 12;
    optional string updateDate = 13;
    optional sonarqube.ws.commons.TextRange textRange = 14;
    repeated sonarqube.ws.commons.Flow flows = 15;
    optional string ruleKey = 16;
    repeated sonarqube.ws.commons.MessageFormatting messageFormattings = 17;
  }
}

// Response of GET api/hotspots/show
message ShowWsResponse {
  optional string key = 1;
  optional Component component = 2;
  optional Component project = 3;
  optional Rule rule = 4;
  optional string status = 5;
  optional string resolution = 6;
  optional int32 line = 7;
  optional string hash = 18;
  optional string message = 8;
  optional string assignee = 9;
  optional string author = 10;
  optional string creationDate = 11;
  optional string updateDate = 12;
  optional sonarqube.ws.commons.TextRange textRange = 13;
  repeated sonarqube.ws.commons.Changelog changelog = 14;
  repeated sonarqube.ws.commons.Comment comment = 15;
  repeated sonarqube.ws.commons.User users = 16;
  optional bool canChangeStatus = 17;
  repeated sonarqube.ws.commons.Flow flows = 19;
  repeated sonarqube.ws.commons.MessageFormatting messageFormattings = 20;
}

message Component {
  optional string organization = 1;
  optional string key = 2;
  optional string qualifier = 3;
  optional string name = 4;
  optional string longName = 5;
  optional string path = 6;
  optional string branch = 7;
  optional string pullRequest = 8;
}

message Rule {
  optional string key = 1;
  optional string name = 2;
  optional string securityCategory = 3;
  optional string vulnerabilityProbability = 4;
  optional string riskDescription = 5 [deprecated=true];
  optional string vulnerabilityDescription = 6 [deprecated=true];
  optional string fixRecommendations = 7 [deprecated=true];
}
