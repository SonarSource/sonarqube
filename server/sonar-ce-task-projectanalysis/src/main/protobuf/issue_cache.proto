// SonarQube, open source software quality management tool.
// Copyright (C) 2008-2016 SonarSource
// mailto:contact AT sonarsource DOT com
//
// SonarQube is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
//
// SonarQube is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


// IMPORTANT
// This is beta version of specification. It will evolve during next
// releases and is not forward-compatible yet.

syntax = "proto2";

import "db-issues.proto";

option java_package = "org.sonar.ce.task.projectanalysis.util.cache";
option optimize_for = SPEED;

message Issue {
  optional string key = 1;
  optional int32 rule_type = 2;
  optional string component_uuid = 3;
  optional string component_key = 4;
  reserved 5; //module_uuid
  reserved 6; // module_uuid_path
  optional string project_uuid = 7;
  optional string project_key = 8;
  optional string rule_key = 9;
  optional string language = 10;
  optional string severity = 11;
  optional bool manual_severity = 12;
  optional string message = 13;
  optional int32 line = 14;
  optional double gap = 15;
  optional int64 effort = 16;
  optional string status = 17;
  optional string resolution = 18;
  optional string assignee_uuid = 19;
  optional string checksum = 20;
  optional string author_login = 22;
  optional string tags = 23;
  optional sonarqube.db.issues.Locations locations = 24;

  optional bool is_from_external_rule_engine = 25;

  // FUNCTIONAL DATES
  optional int64 creation_date = 26;
  optional int64 update_date = 27;
  optional int64 close_date = 28;

  repeated FieldDiffs changes = 29;
  optional FieldDiffs current_changes = 30;

  optional bool is_new = 31;
  optional bool is_copied = 32;
  optional bool being_closed = 33;
  optional bool on_disabled_rule = 34;
  optional bool is_changed = 35;
  optional bool send_notifications = 36;
  optional int64 selected_at = 37;

  repeated Comment comments = 38;

  optional bool quick_fix_available = 39;

  optional bool is_on_referenced_branch = 40;
  optional bool is_on_changed_line = 41;
  optional bool is_new_code_reference_issue = 42;
  optional bool is_no_longer_new_code_reference_issue = 43;
  optional string rule_description_context_key = 44;
  optional sonarqube.db.issues.MessageFormattings message_formattings = 45;
  optional string code_variants = 46;
  optional string assignee_login = 47;
  optional string anticipated_transition_uuid = 48;
  repeated Impact impacts = 49;
  optional string clean_code_attribute = 50;
  optional bool is_prioritized_rule = 51;
  optional string cve_id = 52;
}

message Comment {
  optional string issue_key = 1;
  optional string user_uuid = 2;
  optional int64 created_at = 3;
  optional int64 updated_at = 4;
  optional string key = 5;
  optional string markdown_text = 6;
  optional bool is_new = 7;
}

message FieldDiffs {
  optional string user_uuid = 1;
  optional int64 creation_date = 2;
  optional string issue_key = 3;
  map<string, Diff> diffs = 4;
}

message Diff {
  optional string old_value = 1;
  optional string new_value = 2;
}

message Impact {
  required string software_quality = 1;
  required string severity = 2;
  required bool manual_severity = 3;
}
