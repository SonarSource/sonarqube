sonar {
  properties {
    property 'sonar.projectName', "${projectTitle} :: Process"
  }
}

dependencies {
  // please keep the list grouped by configuration and ordered by name

  api 'ch.qos.logback:logback-classic'
  api 'ch.qos.logback:logback-core'
  api 'commons-codec:commons-codec'
  api 'commons-io:commons-io'
  api 'org.apache.commons:commons-lang3'
  api 'com.google.code.gson:gson'
  api 'com.google.guava:guava'
  api 'com.google.protobuf:protobuf-java'
  api 'com.hazelcast:hazelcast'
  api 'org.slf4j:jul-to-slf4j'
  api 'org.slf4j:slf4j-api'
  api 'org.sonarsource.api.plugin:sonar-plugin-api'
  api project(':sonar-core')

  compileOnlyApi 'com.github.spotbugs:spotbugs-annotations'

  testImplementation 'com.github.spotbugs:spotbugs-annotations'
  testImplementation 'com.google.protobuf:protobuf-java'
  testImplementation 'com.tngtech.java:junit-dataprovider'
  testImplementation 'junit:junit'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.hamcrest:hamcrest-core'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.awaitility:awaitility'
  testImplementation project(':sonar-testing-harness')

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

test {
  // Enabling the JUnit Platform (see https://github.com/junit-team/junit5-samples/tree/master/junit5-migration-gradle)
  useJUnitPlatform()
}
