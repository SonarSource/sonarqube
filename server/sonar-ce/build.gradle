description = 'Compute Engine JVM application'

sonar {
  properties {
    property 'sonar.projectName', "${projectTitle} :: Compute Engine"
  }
}

dependencies {
  // please keep the list grouped by configuration and ordered by name
  api 'com.google.guava:guava'
  api 'com.google.protobuf:protobuf-java'
  api 'com.hazelcast:hazelcast'
  api 'commons-io:commons-io'
  api 'com.zaxxer:HikariCP'
  api 'org.sonarsource.api.plugin:sonar-plugin-api'
  api project(':server:sonar-ce-common')
  api project(':server:sonar-ce-task')
  api project(':server:sonar-ce-task-projectanalysis')
  api project(':server:sonar-process')
  api project(':server:sonar-ce-task')
  api project(':server:sonar-server-common')
  api project(':sonar-core')
  api project(':sonar-plugin-api-impl')
  api project(':sonar-ws')
  
  compileOnlyApi 'com.github.spotbugs:spotbugs-annotations'

  testImplementation 'com.github.spotbugs:spotbugs-annotations'
  testImplementation 'com.tngtech.java:junit-dataprovider'
  testImplementation 'junit:junit'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.awaitility:awaitility'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.slf4j:slf4j-api'
  testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'

  testImplementation testFixtures(project(':server:sonar-db-dao'))

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

test {
  // Enabling the JUnit Platform (see https://github.com/junit-team/junit5-samples/tree/master/junit5-migration-gradle)
  useJUnitPlatform()
}
