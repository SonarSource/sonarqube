plugins {
    id 'java-library'
}

sonarqube {
  properties {
    property 'sonar.projectName', "${projectTitle} :: Database Core"
  }
}

dependencies {
  // please keep the list grouped by configuration and ordered by name

  implementation 'ch.qos.logback:logback-classic'
  implementation 'ch.qos.logback:logback-core'
  implementation 'com.google.guava:guava'
  api  'commons-io:commons-io'
  implementation 'commons-lang:commons-lang'
  api 'org.apache.commons:commons-dbcp2'
  api  'org.mybatis:mybatis'
  implementation 'org.picocontainer:picocontainer'
  implementation 'org.slf4j:slf4j-api'
  api project(':server:sonar-process')
  implementation project(path: ':sonar-plugin-api', configuration: 'shadow')
  api project(':sonar-plugin-api-impl')

  compileOnly 'com.google.code.findbugs:jsr305'

  testImplementation 'com.google.code.findbugs:jsr305'
  testImplementation 'com.h2database:h2'
  testImplementation 'com.microsoft.sqlserver:mssql-jdbc'
  testImplementation 'com.oracle.database.jdbc:ojdbc8'
  testImplementation 'com.tngtech.java:junit-dataprovider'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.postgresql:postgresql'
  testImplementation project(':sonar-testing-harness')

  testRuntimeOnly 'com.h2database:h2'
  testRuntimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
  testRuntimeOnly 'com.oracle.database.jdbc:ojdbc8'
  testRuntimeOnly 'org.postgresql:postgresql'

  testFixturesApi 'commons-dbutils:commons-dbutils'
  testFixturesApi 'junit:junit'
  testFixturesApi 'org.assertj:assertj-core'

  testFixturesCompileOnly 'com.google.code.findbugs:jsr305'
}

test {
  if (System.hasProperty('orchestrator.configUrl'))
    systemProperty 'orchestrator.configUrl', System.getProperty('orchestrator.configUrl')
}

artifactoryPublish.skip = false

// Used by core plugins
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      if (release) {
        artifact sourcesJar
        artifact javadocJar
      }
    }
  }
}
