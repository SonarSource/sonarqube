<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.audit.AuditMapper">

  <sql id="sqlColumns">
    a.uuid as "uuid",
    a.organization_uid as "organizationUuid",
    a.user_uuid as "userUuid",
    a.user_login as "userLogin",
    a.user_triggered as "userTriggered",
    a.category as "category",
    a.operation as "operation",
    a.new_value as "newValue",
    a.created_at as "createdAt"
  </sql>

  <sql id="sqlColumnsInInnerQuery">
    uuid,
    organization_uid,
    user_uuid,
    user_login,
    user_triggered,
    category,
    operation,
    new_value,
    created_at
  </sql>

  <select id="selectByPeriodPaginated" parameterType="map" resultType="org.sonar.db.audit.AuditDto">
    select
      <include refid="sqlColumns"/>
    from audits a
    where
      a.created_at &gt;= #{start} and a.created_at &lt; #{end}
    limit #{pagination.pageSize,jdbcType=INTEGER} offset #{pagination.offset,jdbcType=INTEGER}
  </select>

  <select id="selectByPeriodPaginated" parameterType="map" resultType="org.sonar.db.audit.AuditDto" databaseId="mssql">
    select <include refid="sqlColumns"/> from (
      select
        row_number() over(order by created_at, uuid) as row_number,
          <include refid="sqlColumnsInInnerQuery" />
        from audits
        where created_at &gt;= #{start} and created_at &lt; #{end}
    ) as a
    where
    a.row_number between #{pagination.startRowNumber,jdbcType=INTEGER} and #{pagination.endRowNumber,jdbcType=INTEGER}
    order by a.row_number asc
  </select>

  <select id="selectByPeriodPaginated" parameterType="map" resultType="org.sonar.db.audit.AuditDto" databaseId="oracle">
    select <include refid="sqlColumns"/> from (
      select rownum as rn, t.* from (
        select
        <include refid="sqlColumnsInInnerQuery"/>
        from audits
        where created_at &gt;= #{start} and created_at &lt; #{end}
      ) t
    ) a
    where
      a.rn between #{pagination.startRowNumber,jdbcType=INTEGER} and #{pagination.endRowNumber,jdbcType=INTEGER}
    order by a.rn asc
  </select>

  <insert id="insert" parameterType="Map" useGeneratedKeys="false">
    INSERT INTO audits
    (
      uuid,
      organization_uuid,
      user_uuid,
      user_login,
      user_triggered,
      category,
      operation,
      new_value,
      created_at
    )
    VALUES (
      #{dto.uuid, jdbcType=VARCHAR},
      #{dto.organizationUuid, jdbcType=VARCHAR},
      #{dto.userUuid, jdbcType=VARCHAR},
      #{dto.userLogin, jdbcType=VARCHAR},
      #{dto.userTriggered, jdbcType=BOOLEAN},
      #{dto.category, jdbcType=VARCHAR},
      #{dto.operation, jdbcType=VARCHAR},
      #{dto.newValue, jdbcType=VARCHAR},
      #{dto.createdAt, jdbcType=BIGINT}
    )
  </insert>

  <select id="selectOlderThan" parameterType="long" resultType="org.sonar.db.audit.AuditDto">
    select
      <include refid="sqlColumns"/>
    from audits a
    where
      a.created_at &lt; #{beforeTimestamp,jdbcType=BIGINT}
  </select>

  <delete id="purge" parameterType="long">
    delete from audits
    where uuid in (select a.uuid from audits a where a.created_at &lt; #{threshold,jdbcType=BIGINT}
    order by a.created_at limit 100000)
  </delete>

  <delete id="purge" parameterType="long" databaseId="mssql">
    delete from audits
    where uuid in (select top 100000 a.uuid from audits a where a.created_at &lt; #{threshold,jdbcType=BIGINT}
      order by a.created_at)
  </delete>

    <delete id="purge" parameterType="long" databaseId="oracle">
    delete from audits
    where uuid in (select a.uuid from audits a where a.created_at &lt; #{threshold,jdbcType=BIGINT}
      order by a.created_at fetch first 100000 rows only)
  </delete>
</mapper>
