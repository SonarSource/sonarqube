<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.qualityprofile.ActiveRuleMapper">

  <sql id="activeRuleColumns">
    a.uuid,
    a.profile_uuid as "profileUuid",
    a.rule_uuid as "ruleUuid",
    a.failure_level as "severity",
    a.inheritance as "inheritance",
    r.plugin_rule_key as "rulefield",
    r.plugin_name as "repository",
    rp.uuid as "ruleProfileUuid",
    a.created_at as "createdAt",
    a.updated_at as "updatedAt"
  </sql>

  <sql id="orgActiveRuleColumns">
    a.uuid,
    a.profile_uuid as "profileUuid",
    a.rule_uuid as "ruleUuid",
    a.failure_level as "severity",
    a.inheritance as "inheritance",
    r.plugin_rule_key as "rulefield",
    r.plugin_name as "repository",
    r.security_standards as "securityStandards",
    rp.uuid as "ruleProfileUuid",
    a.created_at as "createdAt",
    a.updated_at as "updatedAt",
    oqp.uuid as "orgProfileUuid",
    r.is_external as "isExternal"
  </sql>

  <sql id="activeRuleKeyJoin">
    inner join rules_profiles rp on rp.uuid = a.profile_uuid
    inner join rules r on r.uuid = a.rule_uuid
  </sql>

  <insert id="insert" parameterType="ActiveRule" useGeneratedKeys="false">
    insert into active_rules (
      uuid,
      profile_uuid,
      rule_uuid,
      failure_level,
      inheritance,
      created_at,
      updated_at
    ) values (
      #{uuid, jdbcType=VARCHAR},
      #{profileUuid, jdbcType=VARCHAR},
      #{ruleUuid, jdbcType=VARCHAR},
      #{severity, jdbcType=INTEGER},
      #{inheritance, jdbcType=VARCHAR},
      #{createdAt, jdbcType=BIGINT},
      #{updatedAt, jdbcType=BIGINT}
    )
  </insert>

  <update id="update" parameterType="ActiveRule" useGeneratedKeys="false">
    update active_rules
    set
      failure_level = #{severity, jdbcType=INTEGER},
      inheritance = #{inheritance, jdbcType=VARCHAR},
      updated_at = #{updatedAt, jdbcType=BIGINT}
    where
      uuid = #{uuid, jdbcType=BIGINT}
  </update>

  <delete id="delete" parameterType="String">
    delete from active_rules
    where
      uuid=#{uuid, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByRuleProfileUuids" parameterType="String">
    delete from active_rules
    where exists (
      select 1
      from rules_profiles rp
      where rp.uuid = profile_uuid
      and rp.uuid in
        <foreach collection="rulesProfileUuids" open="(" close=")" item="rulesProfileUuid" separator=",">#{rulesProfileUuid, jdbcType=VARCHAR}</foreach>
      )
  </delete>

  <delete id="deleteByUuids" parameterType="String">
    delete from active_rules
    where
      uuid in
        <foreach collection="uuids" open="(" close=")" item="uuid" separator=",">#{uuid, jdbcType=VARCHAR}</foreach>
  </delete>

  <select id="selectByKey" parameterType="map" resultType="ActiveRule">
    select
    <include refid="activeRuleColumns"/>
    from active_rules a
    <include refid="activeRuleKeyJoin"/>
    where
    rp.uuid = #{ruleProfileUuid, jdbcType=VARCHAR}
    and r.plugin_rule_key = #{rule, jdbcType=VARCHAR}
    and r.plugin_name = #{repository, jdbcType=VARCHAR}
  </select>

  <select id="selectByProfileUuid" parameterType="string" resultType="org.sonar.db.qualityprofile.OrgActiveRuleDto">
    select
    <include refid="orgActiveRuleColumns"/>
    from active_rules a
    inner join rules_profiles rp on rp.uuid = a.profile_uuid
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.uuid
    inner join rules r on r.uuid = a.rule_uuid and r.status != 'REMOVED'
    where oqp.uuid = #{id, jdbcType=VARCHAR}
  </select>

  <select id="selectByTypeAndProfileUuids" parameterType="Map" resultType="org.sonar.db.qualityprofile.OrgActiveRuleDto">
    select
    <include refid="orgActiveRuleColumns"/>
    from active_rules a
    inner join rules_profiles rp on rp.uuid = a.profile_uuid
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.uuid
    inner join rules r on r.uuid = a.rule_uuid and r.status != 'REMOVED'
    where
      r.rule_type in <foreach collection="types" item="type" separator="," open="(" close=")">#{type, jdbcType=INTEGER}</foreach>
      and oqp.uuid in <foreach collection="profileUuids" item="uuid" separator="," open="(" close=")">#{uuid, jdbcType=VARCHAR}</foreach>
  </select>

  <select id="selectByRuleProfileUuid" parameterType="string" resultType="org.sonar.db.qualityprofile.ActiveRuleDto">
    select
    <include refid="activeRuleColumns"/>
    from active_rules a
    <include refid="activeRuleKeyJoin"/>
    where
      rp.uuid = #{ruleProfileUuid, jdbcType=VARCHAR}
  </select>

  <select id="selectByRuleUuidsAndRuleProfileUuids" parameterType="map" resultType="org.sonar.db.qualityprofile.ActiveRuleDto">
    select
    <include refid="activeRuleColumns"/>
    from active_rules a
    <include refid="activeRuleKeyJoin"/>
    where
    r.uuid in <foreach collection="ruleUuids" item="ruleUuid" separator="," open="(" close=")">#{ruleUuid, jdbcType=VARCHAR}</foreach>
    and rp.uuid in <foreach collection="ruleProfileUuids" item="ruleProfileUuid" separator="," open="(" close=")">#{ruleProfileUuid, jdbcType=VARCHAR}</foreach>
  </select>

  <select id="selectOrgByRuleUuid" parameterType="map" resultType="org.sonar.db.qualityprofile.OrgActiveRuleDto">
    select
    <include refid="orgActiveRuleColumns"/>
    from active_rules a
    inner join rules_profiles rp on rp.uuid = a.profile_uuid
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.uuid
    inner join rules r on r.uuid = a.rule_uuid
    where
    a.rule_uuid = #{ruleUuid, jdbcType=VARCHAR}
    and oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
  </select>

  <select id="selectByRuleUuid" parameterType="String" resultType="ActiveRule">
    select
    <include refid="activeRuleColumns"/>
    from active_rules a
    <include refid="activeRuleKeyJoin"/>
    where
      r.uuid = #{ruleUuid, jdbcType=VARCHAR}
  </select>

  <select id="selectByRuleUuids" parameterType="List" resultType="org.sonar.db.qualityprofile.OrgActiveRuleDto">
    select
    <include refid="orgActiveRuleColumns"/>
    from active_rules a
    inner join rules_profiles rp on rp.uuid = a.profile_uuid
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.uuid
    inner join rules r on r.uuid = a.rule_uuid
    where
    a.rule_uuid in
    <foreach collection="ruleUuids" item="ruleUuid" separator="," open="(" close=")">
      #{ruleUuid, jdbcType=VARCHAR}
    </foreach>
  </select>

  <!-- Parameters -->

  <sql id="activeRuleParamColumns">
    p.uuid,
    p.active_rule_uuid as activeRuleUuid,
    p.rules_parameter_uuid as rulesParameterUuid,
    p.rules_parameter_key as kee,
    p.value as value
  </sql>

  <insert id="insertParameter" parameterType="ActiveRuleParam" useGeneratedKeys="false">
    insert into active_rule_parameters (
      uuid,
      active_rule_uuid,
      rules_parameter_uuid,
      rules_parameter_key,
      value
    ) values (
      #{uuid, jdbcType=VARCHAR},
      #{activeRuleUuid, jdbcType=VARCHAR},
      #{rulesParameterUuid, jdbcType=BIGINT},
      #{key, jdbcType=VARCHAR},
      #{value, jdbcType=VARCHAR}
    )
  </insert>

  <update id="updateParameter" parameterType="ActiveRuleParam">
    UPDATE active_rule_parameters SET
    value=#{value, jdbcType=VARCHAR}
    WHERE uuid=#{uuid, jdbcType=VARCHAR}
  </update>

  <delete id="deleteParameters" parameterType="String">
    DELETE FROM active_rule_parameters WHERE active_rule_uuid=#{activeRuleUuid, jdbcType=BIGINT}
  </delete>

  <delete id="deleteParametersByRuleProfileUuids" parameterType="String">
    delete from active_rule_parameters
    where exists (
      select 1 from active_rules ar
      inner join rules_profiles rp on rp.uuid = ar.profile_uuid
      where ar.uuid = active_rule_uuid
      and rp.uuid in
        <foreach collection="rulesProfileUuids" open="(" close=")" item="rulesProfileUuid" separator=",">
        #{rulesProfileUuid, jdbcType=VARCHAR}
        </foreach>
    )
  </delete>

  <delete id="deleteParameter" parameterType="String">
    DELETE FROM active_rule_parameters WHERE uuid=#{uuid, jdbcType=VARCHAR}
  </delete>

  <delete id="deleteParamsByActiveRuleUuids" parameterType="String">
    delete from active_rule_parameters
    where
      active_rule_uuid in
    <foreach collection="activeRuleUuids" open="(" close=")" item="activeRuleUuid" separator=",">#{activeRuleUuid, jdbcType=VARCHAR}</foreach>
  </delete>

  <select id="selectParamsByActiveRuleUuid" parameterType="String" resultType="ActiveRuleParam">
    select
    <include refid="activeRuleParamColumns"/>
    from active_rule_parameters p
    <where>
      p.active_rule_uuid=#{uuid, jdbcType=VARCHAR}
    </where>
  </select>

  <select id="selectParamsByActiveRuleUuids" parameterType="map" resultType="ActiveRuleParam">
    select
    <include refid="activeRuleParamColumns"/>
    from active_rule_parameters p
    <where>
      <foreach collection="uuids" item="uuid" open="(" separator=" or " close=")">
        p.active_rule_uuid=#{uuid, jdbcType=VARCHAR}
      </foreach>
    </where>
  </select>

  <select id="countActiveRulesByQuery" resultType="KeyLongValue" parameterType="map">
    select oqp.uuid as "key", count(ar.uuid) as "value"
    from active_rules ar
    inner join rules_profiles rp on rp.uuid = ar.profile_uuid
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.uuid
    inner join rules r on r.uuid = ar.rule_uuid
    <where>
      <foreach collection="profileUuids" item="profileUuid" open="(" separator=" or " close=")">
        oqp.uuid = #{profileUuid, jdbcType=VARCHAR}
      </foreach>
      <choose>
        <when test="ruleStatus == null">
          and r.status != 'REMOVED'
        </when>
        <otherwise>
          and r.status = #{ruleStatus, jdbcType=VARCHAR}
        </otherwise>
      </choose>
      <if test="inheritance != null">
        and ar.inheritance = #{inheritance, jdbcType=VARCHAR}
      </if>
    </where>
    group by oqp.uuid
  </select>

  <select id="scrollAllForIndexing" resultType="org.sonar.db.qualityprofile.IndexedActiveRuleDto" fetchSize="${_scrollFetchSize}" resultSetType="FORWARD_ONLY">
    <include refid="scrollAllForIndexingSql"/>
  </select>

  <select id="scrollByUuidsForIndexing" parameterType="map" resultType="org.sonar.db.qualityprofile.IndexedActiveRuleDto" fetchSize="${_scrollFetchSize}" resultSetType="FORWARD_ONLY">
    <include refid="scrollAllForIndexingSql"/>
    where ar.uuid in
    <foreach collection="uuids" open="(" close=")" item="uuid" separator=",">#{uuid, jdbcType=VARCHAR}</foreach>
  </select>

  <select id="scrollByRuleProfileUuidForIndexing" parameterType="String" resultType="org.sonar.db.qualityprofile.IndexedActiveRuleDto" fetchSize="${_scrollFetchSize}" resultSetType="FORWARD_ONLY">
    <include refid="scrollAllForIndexingSql"/>
    where rp.uuid = #{ruleProfileUuid, jdbcType=VARCHAR}
  </select>

  <sql id="scrollAllForIndexingSql">
    select
    ar.uuid as "uuid",
    ar.failure_level as "severity",
    ar.inheritance as "inheritance",
    r.uuid as "ruleUuid",
    r.plugin_name as "repository",
    r.plugin_rule_key as "key",
    rp.uuid as "ruleProfileUuid"
    from active_rules ar
    inner join rules_profiles rp on rp.uuid = ar.profile_uuid
    inner join rules r on r.uuid = ar.rule_uuid
  </sql>
</mapper>

