<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.alm.setting.ProjectAlmSettingMapper">

  <sql id="sqlColumns">
    p.uuid as uuid,
    p.project_uuid as projectUuid,
    p.alm_setting_uuid as almSettingUuid,
    p.alm_repo as almRepo,
    p.alm_slug as almSlug,
    p.summary_comment_enabled as summaryCommentEnabled,
    p.monorepo as monorepo,
    p.created_at as createdAt,
    p.updated_at as updatedAt
  </sql>

  <select id="selectAlmTypeAndUrlByProject" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmKeyAndProject">
    select
      pas.project_uuid as "projectUuid",
      alm_settings.alm_id as "almId",
      alm_settings.url as "url",
      pas.monorepo as "monorepo"
    from
      project_alm_settings pas
    inner join
      alm_settings alm_settings on pas.alm_setting_uuid = alm_settings.uuid
  </select>

    <select id="selectByUuid" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
      select <include refid="sqlColumns"/>
    from
      project_alm_settings p
    where
      p.uuid = #{uuid, jdbcType=VARCHAR}
    </select>

  <select id="selectByProjectUuid" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    select <include refid="sqlColumns"/>
    from
      project_alm_settings p
    where
      p.project_uuid = #{projectUuid, jdbcType=VARCHAR}
  </select>

  <select id="selectByAlmSettingAndSlugs" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    select <include refid="sqlColumns"/>
    from
      project_alm_settings p
    where
      alm_setting_uuid=#{almSettingUuid, jdbcType=VARCHAR}
    and alm_slug in
      <foreach collection="slugs" open="(" close=")" item="slug" separator=",">
        #{slug, jdbcType=VARCHAR}
      </foreach>
  </select>

  <select id="selectByAlmSettingAndRepos" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    select <include refid="sqlColumns"/>
    from
      project_alm_settings p
    where
      alm_setting_uuid=#{almSettingUuid, jdbcType=VARCHAR}
    and alm_repo in
      <foreach collection="repos" open="(" close=")" item="repo" separator=",">
        #{repo, jdbcType=VARCHAR}
      </foreach>
  </select>

  <sql id="selectByAlmSql">
    select <include refid="sqlColumns"/>
    from
      project_alm_settings p
    inner join
      alm_settings alm_settings on p.alm_setting_uuid = alm_settings.uuid
    where
      alm_settings.alm_id=#{alm, jdbcType=VARCHAR}
  </sql>

  <select id="selectByAlm" parameterType="string" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    <include refid="selectByAlmSql"/>
  </select>

  <select id="selectByProjectUuidsAndAlm" parameterType="map" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    <include refid="selectByAlmSql"/>
    and p.project_uuid in
      <foreach collection="projectUuids" open="(" close=")" item="projectUuid" separator=",">
        #{projectUuid, jdbcType=VARCHAR}
      </foreach>
  </select>

  <insert id="insert" parameterType="Map" useGeneratedKeys="false">
    INSERT INTO project_alm_settings
    (
      uuid,
      project_uuid,
      alm_setting_uuid,
      alm_repo,
      alm_slug,
      summary_comment_enabled,
      monorepo,
      created_at,
      updated_at
    )
    VALUES (
      #{uuid, jdbcType=VARCHAR},
      #{dto.projectUuid, jdbcType=VARCHAR},
      #{dto.almSettingUuid, jdbcType=VARCHAR},
      #{dto.almRepo, jdbcType=VARCHAR},
      #{dto.almSlug, jdbcType=VARCHAR},
      #{dto.summaryCommentEnabled, jdbcType=BOOLEAN},
      #{dto.monorepo, jdbcType=BOOLEAN},
      #{now, jdbcType=BIGINT},
      #{now, jdbcType=BIGINT}
    )
  </insert>

  <!-- Oracle -->
  <insert id="insert" parameterType="Map" useGeneratedKeys="false" databaseId="oracle">
    INSERT INTO project_alm_settings
    (
      uuid,
      project_uuid,
      alm_setting_uuid,
      alm_repo,
      alm_slug,
      summary_comment_enabled,
      monorepo,
      created_at,
      updated_at
    )
    VALUES (
      #{uuid, jdbcType=VARCHAR},
      #{dto.projectUuid, jdbcType=VARCHAR},
      #{dto.almSettingUuid, jdbcType=VARCHAR},
      #{dto.almRepo, jdbcType=VARCHAR},
      #{dto.almSlug, jdbcType=VARCHAR},
      #{dto.summaryCommentEnabled, jdbcType=NUMERIC},
      #{dto.monorepo, jdbcType=NUMERIC},
      #{now, jdbcType=BIGINT},
      #{now, jdbcType=BIGINT}
    )
  </insert>

  <update id="update" parameterType="map">
    UPDATE project_alm_settings
    SET
      alm_setting_uuid = #{dto.almSettingUuid, jdbcType=VARCHAR},
      alm_repo = #{dto.almRepo, jdbcType=VARCHAR},
      alm_slug = #{dto.almSlug, jdbcType=VARCHAR},
      summary_comment_enabled = #{dto.summaryCommentEnabled, jdbcType=BOOLEAN},
      monorepo = #{dto.monorepo, jdbcType=BOOLEAN},
      updated_at = #{now, jdbcType=BIGINT}
    WHERE
      project_uuid = #{dto.projectUuid, jdbcType=VARCHAR}
  </update>

  <!-- Oracle -->
  <update id="update" parameterType="map" databaseId="oracle">
    UPDATE project_alm_settings
    SET
      alm_setting_uuid = #{dto.almSettingUuid, jdbcType=VARCHAR},
      alm_repo = #{dto.almRepo, jdbcType=VARCHAR},
      alm_slug = #{dto.almSlug, jdbcType=VARCHAR},
      summary_comment_enabled = #{dto.summaryCommentEnabled, jdbcType=NUMERIC},
      monorepo = #{dto.monorepo, jdbcType=NUMERIC},
      updated_at = #{now, jdbcType=BIGINT}
    WHERE
      project_uuid = #{dto.projectUuid, jdbcType=VARCHAR}
  </update>

  <select id="countByAlmSettingUuid" parameterType="map" resultType="int">
    SELECT
      count(1)
    FROM
      project_alm_settings p
    WHERE
      alm_setting_uuid = #{almSettingUuid, jdbcType=VARCHAR}
  </select>

  <select id="countByQuery" parameterType="map" resultType="int">
    SELECT
      count(1)
    FROM
      project_alm_settings p
    <include refid="searchByQueryWhereClause"/>
  </select>

  <select id="selectByQuery" resultType="org.sonar.db.alm.setting.ProjectAlmSettingDto">
    SELECT
      <include refid="sqlColumns"/>
    FROM
      project_alm_settings p
    <include refid="searchByQueryWhereClause"/>
    ORDER BY p.alm_repo, p.uuid
    <include refid="org.sonar.db.common.Common.pagination"/>
    </select>

  <sql id="searchByQueryWhereClause">
    <where>
      1=1
      <if test="query.repository != null">
        AND (
          (lower(p.alm_repo) = lower(#{query.repository, jdbcType=VARCHAR}))
          OR (lower(p.alm_slug) = lower(#{query.repository, jdbcType=VARCHAR}))
        )
      </if>
      <if test="query.almSettingUuid != null">
        AND p.alm_setting_uuid = #{query.almSettingUuid, jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <delete id="deleteByAlmSettingUuid" parameterType="String">
    DELETE FROM project_alm_settings WHERE alm_setting_uuid = #{almSettingUuid, jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByProjectUuid" parameterType="String">
    DELETE FROM project_alm_settings WHERE project_uuid = #{projectUuid, jdbcType=VARCHAR}
  </delete>

</mapper>
