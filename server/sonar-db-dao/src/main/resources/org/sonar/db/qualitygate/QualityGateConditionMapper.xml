<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.qualitygate.QualityGateConditionMapper">

  <insert id="insert" parameterType="QualityGateCondition">
    insert into quality_gate_conditions (uuid, qgate_uuid, metric_uuid, operator, value_error, created_at, updated_at)
    values (#{uuid}, #{qualityGateUuid}, #{metricUuid}, #{operator}, #{errorThreshold}, #{createdAt}, #{updatedAt})
  </insert>

  <sql id="conditionColumns">
    uuid, qgate_uuid as qualityGateUuid, metric_uuid as metricUuid, operator, value_error as errorThreshold,
    created_at as createdAt, updated_at as updatedAt
  </sql>

  <select id="selectForQualityGate" resultType="QualityGateCondition" parameterType="String">
    select
    <include refid="conditionColumns"/>
    from quality_gate_conditions where qgate_uuid=#{qGateUuid}
    order by created_at asc
  </select>

  <select id="selectByUuid" parameterType="String" resultType="QualityGateCondition">
    select
    <include refid="conditionColumns"/>
    from quality_gate_conditions where uuid=#{uuid}
  </select>

  <update id="delete" parameterType="String">
    delete from quality_gate_conditions where uuid=#{uuid}
  </update>

  <update id="update" parameterType="QualityGateCondition">
    update quality_gate_conditions set
    metric_uuid=#{metricUuid},
    operator=#{operator},
    value_error=#{errorThreshold},
    updated_at=#{updatedAt}
    where uuid=#{uuid}
  </update>

  <delete id="deleteConditionsWithInvalidMetrics">
    delete from quality_gate_conditions
    where not exists (select 1 from metrics m where m.enabled=${_true} and m.uuid = metric_uuid)
  </delete>

  <update id="deleteQualityGateConditionsByQualityGateUuid" parameterType="String">
    delete from quality_gate_conditions where qgate_uuid=#{uuid}
  </update>

</mapper>

