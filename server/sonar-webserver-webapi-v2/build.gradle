sonarqube {
    properties {
        property 'sonar.projectName', "${projectTitle} :: WebServer :: WebAPIV2"
    }
}

dependencies {
    // please keep the list grouped by configuration and ordered by name
    api 'org.springdoc:springdoc-openapi-webmvc-core'
    api 'org.springframework:spring-webmvc'
    api 'org.hibernate.validator:hibernate-validator'
    api 'jakarta.el:jakarta.el-api'
    api 'org.glassfish:jakarta.el'

    api project(':server:sonar-db-dao')
    api project(':server:sonar-webserver-common')

    testImplementation 'jakarta.servlet:jakarta.servlet-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.skyscreamer:jsonassert'
    testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'
    testImplementation 'com.tngtech.java:junit-dataprovider'
    testImplementation project(':sonar-testing-harness')

    testImplementation testFixtures(project(':server:sonar-server-common'))
    testImplementation testFixtures(project(':server:sonar-webserver-auth'))

    testFixturesApi 'org.springframework:spring-test'

    testRuntimeOnly 'org.apache.logging.log4j:log4j-core'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

test {
    // Enabling the JUnit Platform (see https://github.com/junit-team/junit5-samples/tree/master/junit5-migration-gradle)
    useJUnitPlatform()
}
